vektorZahlen <- c(8, -5.5, 27, 110)
# Letzte Erinnerung: Löse sehr oft eine Bewertung aus (STRG + SHIFT + S).
# A2 ----
# Wiederhole die Zahl 5 77 mal.
wiederholteZahl <- rep(5, 77)
# A3 ----
# Erstelle eine Sequenz von 500 bis 1 in Einserschritten.
# CodeGolf Pro Tipp: Diese Aufgabe ist mit 5 Symbolen lösbar.
zahlenSequenz1 <- seq(500, 1, by = -1)
# A4 ----
# Erstelle eine Sequenz von 500 bis 0 in Abständen von 25.
zahlenSequenz25 <- seq(500, 0, by = -25)
# A5 ----
# Erstelle eine Sequenz von 500 bis 0 mit 30 Zahlen (in je gleichem Abstand).
zahlenSequenz30 <- seq(500, 0, len = 30)
# A6 ----
zahlenSequenz31 <- zahlenSequenz30 # Diesen Befehl einfach so stehen lassen.
# Füge mittels einer neu zu erstellenden Zuweisung der 'zahlenSequenz31' am Ende die Zahl -5 hinzu.
# Die letzte Zahl (an Position 31) soll also -5 sein.
# Es gibt 3 verschiedene Methoden dafür, die Auswahl ist dir überlassen :).
zahlenSequenz30[31] <- -5
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
zahlenFolge <- seq(1, 20, len=15)
# A7 ----
# Erhalte das 12. Element von 'zahlenFolge'.
element12 <- zahlenFolge[12]
# A8 ----
# Erhalte das 4. und 2. Element von 'zahlenFolge'.
element4_2 <- zahlenFolge[c(4, 2)]
# A9 ----
# Erhalte alle Elemente von 'zahlenFolge', außer Elemente 8 bis 13.
# Pro Tipp: negative Indizierung nutzen
elementOhne <- zahlenFolge[-(8 : 13)]
# A10 ----
# Ändere das 8. Element von 'zahlenFolge' zu 99.
zahlenFolge[8] <- 99
# Mache weiter in "R13_Vektoren_3.R"
zahlenFolge <- seq(1, 20, len=15)
# A11 ----
# Wie viele Elemente befinden sich in 'zahlenFolge'?
# Nutze den richtigen Befehl innerhalb des nachfolgenden Abschnittes.
# Es braucht kein Objekt erstellt zu werden:
# der Code zwischen t*_start und t*_end wird geprüft.
# Es genügt der Aufruf der Funktion, die ermittelt, wie viele Elemente in einem
# Vektor sind. Als Input wähle "zahlenFolge".
# t11_start # Lösung hiernach schreiben
length(zahlenFolge)
# t11_ende # Lösung vor dieser Zeile schreiben
# A12 ----
# Was ist das Ergebnis von zahlenFolge[30]?
element30 <- NA
# Schreibe gerne ins Forum: Warum?
# browseURL("https://open.hpi.de/courses/programmieren-r2022/question/941d5e04-be0b-4c28-a847-d5cea198189c")
# A13 ----
# Welcher Befehl (Funktionsaufruf) zeigt die ersten 6 Elemente von 'zahlenFolge'?
# t13_start # Solche Zeilen immer da lassen
head(zahlenFolge)
# t13_ende
# Mache weiter in "R13_Vektoren_4.R"
# A14 ----
# Schreibe drei verschiedene Methoden (je eine Zeile Code), die Zahlen 1 bis 10 zu erzeugen.
# Sie sollen grundsätzlich verschieden sein (nicht nur ein anderes Argument in der gleichen Funktion).
# Eine der 3 würde in der Realität nicht verwendet werden, weil sie unnötig umständlich ist.
# t14_start # Lösung hier drunter schreiben
1:10
seq(1,10)
c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
# t14_ende # hier drüber schreiben
# A15 ----
# Was ist der wesentliche Unterschied zwischen folgenden beiden Zeilen?
c(5, 3, -8)      # A
vec <- c(5,3,-8) # B
antwortNummer <- 2 # Ersetze 0 mit der Nummer der richtigen Antwort.
# 1. In A werden Leerzeichen verwendet.
# 2. A zeigt das Ergebnis an, B weist es einem Objekt zu.
# 3. A und B tun im Wesentlichen beide daselbe.
# Wenn du fertig bist, übermittle bitte deinen Punktestand an openHPI mit:
# codeoceanR::rt_submit()
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_4.R")
zahlenSequenz30 <- seq(500, 0, len=30)
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
zahlenSequenz30 <- seq(500, 0, length.out=30)
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
# A5 ----
# Erstelle eine Sequenz von 500 bis 0 mit 30 Zahlen (in je gleichem Abstand).
zahlenSequenz30 <- seq(500, 0, length.out = 30)
zahlenSequenz30
data(zahlenSequenz30)
# A5 ----
# Erstelle eine Sequenz von 500 bis 0 mit 30 Zahlen (in je gleichem Abstand).
zahlenSequenz30 <- seq(500, 0, len = 30)
zahlenSequenz30
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
# A5 ----
# Erstelle eine Sequenz von 500 bis 0 mit 30 Zahlen (in je gleichem Abstand).
zahlenSequenz30 <- seq(500, 0, length.out = 30)
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
# A5 ----
# Erstelle eine Sequenz von 500 bis 0 mit 30 Zahlen (in je gleichem Abstand).
zahlenSequenz30 <- round(seq(500, 0, length.out = 30))
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
codeoceanR::rt_create()
source("C:/Users/Lenovo/OpenHPI/Woche 1 - Grundlagen/R22_1.3_Vektoren/R13_Vektoren_1.R")
