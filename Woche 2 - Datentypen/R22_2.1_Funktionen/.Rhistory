# A1 ----
# Schreibe die Funktion `doppelterBetrag`. Für einen beliebigen Input soll sie
# das doppelte des Betrages (Absolutwert, siehe 1.1 Syntax) zurückgeben.
doppelterBetrag <- function(x) {abs(x)*2}
# Zum Testen deiner Funktion kannst du die Auskommentierung folgender Zeilen aufheben.
# Markiere die Zeile(n) und drücke STRG + SHIFT + C.
# doppelterBetrag(-5.5) # soll 11 sein
# doppelterBetrag(7)    # soll 14 sein
# A2 ----
# Nehmen wir mal an, R hätte keine eingebaute `mad`-Funktion um die
# mittlere absolute Abweichung vom Median (MAD) zu berechnen.
# Welche der folgenden Einzeiler hätte dafür die richtige Syntax?
# 1. function(getMAD) abs(v-median(v))
# 2. getMAD <- function(v) dev <- v-median(v) ; median(abs(dev))
# 3. getMAD <- function(v) {dev <- v-median(v) ; median(abs(dev))}
# 4. function(median) abs(deviation(v))
madFunktion <- 3 # change zero to the correct number
# A3 ----
# Schreibe eine Funktion, die zufällig "Kopf" oder "Zahl" ausgibt (ohne if/else).
# Es wird kein Input Argument benötigt. Achte auf Groß- und Kleinschreibung.
# Hinweis: in 1.4 Statistik haben wir eine entsprechende Funktion kennengelernt.
muenzwurf <- function(x) {sample(c("Kopf", "Zahl"), size = 1)}
# A4 ----
# `stats` soll einen Vektor ausgeben mit:
# arithmetischer Mittelwert, Standardabweichung, Median, Minimum, 70-Perzentil
# Tipp: nutze für den Body der Funktion den Code aus Lektion 1.4 Statistik A1.
# Verwende innerhalb der Funktion keine Objekte aus dem globalen Environment.
# Siehe Nachtrag unter (Shift + Klick in Rstudio):
# https://open.hpi.de/courses/programmieren-r2022/question/97cf13bf-5e81-4aa5-bbb3-b2cffa64d549
# Schaue dir bei Funktionsaufgaben auch gerne immer die Beispielanwendungen an.
stats <- function(x) {c(mean(x), sd(x), median(x), min(x), quantile(x, probs = 0.7))}
ein_paar_werte <- c(82, 146, 202, 258, 206, 335, 137, 169, 99, 190,
67, 96, 196, 141, 104, 345, 125, 35, 159, 85,
125, 161, 87, 149, 130, 46, 64, 105, 140, 199,
128, 205, 228, 85, 140, 166, 73, 123, 62, 270)
stats(ein_paar_werte) # soll sein: 146.575,  71.926,  138.5,  35,  166.9
andere_werte <- 165:178
stats(andere_werte) # soll sein: 171.5,  4.1833,  171.5,  165,  174.1
# A5 ----
# `q3` soll das dritte Quartil (75% Quantil) eines Inputvektors ohne Namen ausgeben.
# quantile hat ein Argument, was das names-Attribut ausschaltet.
q3 <- function(zahlen) {quantile(zahlen, probs = 0.75, names = FALSE)}
q3(1:10) # soll 7.75 ausgeben (75% der Werte 1:10 liegen hier drunter)
q3(  rnorm(2000)  )  # sollte ungefähr 0.67 sein (0.55 bis 0.81)
# Wenn du fertig bist, übermittle bitte deinen Punktestand an openHPI mit:
# codeoceanR::rt_submit()
source("C:/Users/Lenovo/OpenHPI/Woche 2 - Datentypen/R22_2.1_Funktionen/R21_Funktionen_2.R")
source("C:/Users/Lenovo/OpenHPI/Woche 2 - Datentypen/R22_2.1_Funktionen/R21_Funktionen_1.R")
codeoceanR::rt_submit()
codeoceanR::rt_create()
